/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var U=Object.defineProperty;var Oe=Object.getOwnPropertyDescriptor;var De=Object.getOwnPropertyNames;var Fe=Object.prototype.hasOwnProperty;var Me=(e,n)=>{for(var t in n)U(e,t,{get:n[t],enumerable:!0})},Pe=(e,n,t,i)=>{if(n&&typeof n=="object"||typeof n=="function")for(let r of De(n))!Fe.call(e,r)&&r!==t&&U(e,r,{get:()=>n[r],enumerable:!(i=Oe(n,r))||i.enumerable});return e};var Ge=e=>Pe(U({},"__esModule",{value:!0}),e);var ht={};Me(ht,{default:()=>j});module.exports=Ge(ht);var f=require("obsidian");var _=require("obsidian"),N=class extends _.PluginSettingTab{constructor(t,i){super(t,i);this.plugin=i}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Settings for my awesome plugin."}),new _.Setting(t).setName("Google API Key").setDesc("Enter your Google API key").addText(i=>i.setPlaceholder("Enter your API key").setValue(this.plugin.settings.googleApiKey).onChange(async r=>{this.plugin.settings.googleApiKey=r,await this.plugin.saveSettings()})),new _.Setting(t).setName("DeepSeek API Key").setDesc("Enter your DeepSeek API key").addText(i=>i.setPlaceholder("Enter your API key").setValue(this.plugin.settings.deepseekApiKey).onChange(async r=>{this.plugin.settings.deepseekApiKey=r,await this.plugin.saveSettings()})),new _.Setting(t).setName("API Provider").setDesc("Choose your API provider").addDropdown(i=>{i.addOption("google","Google").addOption("deepseek","DeepSeek").setValue(this.plugin.settings.apiProvider).onChange(async r=>{this.plugin.settings.apiProvider=r,await this.plugin.saveSettings()})}),new _.Setting(t).setName("Reload Plugin").setDesc("Click to reload the plugin and apply the new API key.").addButton(i=>i.setButtonText("Reload").onClick(async()=>{await this.plugin.reloadPlugin(),t.empty(),this.display()}))}};var ee={deepseekApiKey:"",googleApiKey:"",apiProvider:"google"};var te;(function(e){e.STRING="string",e.NUMBER="number",e.INTEGER="integer",e.BOOLEAN="boolean",e.ARRAY="array",e.OBJECT="object"})(te||(te={}));var ne;(function(e){e.LANGUAGE_UNSPECIFIED="language_unspecified",e.PYTHON="python"})(ne||(ne={}));var ie;(function(e){e.OUTCOME_UNSPECIFIED="outcome_unspecified",e.OUTCOME_OK="outcome_ok",e.OUTCOME_FAILED="outcome_failed",e.OUTCOME_DEADLINE_EXCEEDED="outcome_deadline_exceeded"})(ie||(ie={}));var re=["user","model","function","system"],se;(function(e){e.HARM_CATEGORY_UNSPECIFIED="HARM_CATEGORY_UNSPECIFIED",e.HARM_CATEGORY_HATE_SPEECH="HARM_CATEGORY_HATE_SPEECH",e.HARM_CATEGORY_SEXUALLY_EXPLICIT="HARM_CATEGORY_SEXUALLY_EXPLICIT",e.HARM_CATEGORY_HARASSMENT="HARM_CATEGORY_HARASSMENT",e.HARM_CATEGORY_DANGEROUS_CONTENT="HARM_CATEGORY_DANGEROUS_CONTENT"})(se||(se={}));var ae;(function(e){e.HARM_BLOCK_THRESHOLD_UNSPECIFIED="HARM_BLOCK_THRESHOLD_UNSPECIFIED",e.BLOCK_LOW_AND_ABOVE="BLOCK_LOW_AND_ABOVE",e.BLOCK_MEDIUM_AND_ABOVE="BLOCK_MEDIUM_AND_ABOVE",e.BLOCK_ONLY_HIGH="BLOCK_ONLY_HIGH",e.BLOCK_NONE="BLOCK_NONE"})(ae||(ae={}));var oe;(function(e){e.HARM_PROBABILITY_UNSPECIFIED="HARM_PROBABILITY_UNSPECIFIED",e.NEGLIGIBLE="NEGLIGIBLE",e.LOW="LOW",e.MEDIUM="MEDIUM",e.HIGH="HIGH"})(oe||(oe={}));var le;(function(e){e.BLOCKED_REASON_UNSPECIFIED="BLOCKED_REASON_UNSPECIFIED",e.SAFETY="SAFETY",e.OTHER="OTHER"})(le||(le={}));var A;(function(e){e.FINISH_REASON_UNSPECIFIED="FINISH_REASON_UNSPECIFIED",e.STOP="STOP",e.MAX_TOKENS="MAX_TOKENS",e.SAFETY="SAFETY",e.RECITATION="RECITATION",e.LANGUAGE="LANGUAGE",e.OTHER="OTHER"})(A||(A={}));var ue;(function(e){e.TASK_TYPE_UNSPECIFIED="TASK_TYPE_UNSPECIFIED",e.RETRIEVAL_QUERY="RETRIEVAL_QUERY",e.RETRIEVAL_DOCUMENT="RETRIEVAL_DOCUMENT",e.SEMANTIC_SIMILARITY="SEMANTIC_SIMILARITY",e.CLASSIFICATION="CLASSIFICATION",e.CLUSTERING="CLUSTERING"})(ue||(ue={}));var de;(function(e){e.MODE_UNSPECIFIED="MODE_UNSPECIFIED",e.AUTO="AUTO",e.ANY="ANY",e.NONE="NONE"})(de||(de={}));var ce;(function(e){e.MODE_UNSPECIFIED="MODE_UNSPECIFIED",e.MODE_DYNAMIC="MODE_DYNAMIC"})(ce||(ce={}));var g=class extends Error{constructor(n){super(`[GoogleGenerativeAI Error]: ${n}`)}},v=class extends g{constructor(n,t){super(n),this.response=t}},D=class extends g{constructor(n,t,i,r){super(n),this.status=t,this.statusText=i,this.errorDetails=r}},p=class extends g{};var Be="https://generativelanguage.googleapis.com",Le="v1beta",Ke="0.21.0",He="genai-js",k;(function(e){e.GENERATE_CONTENT="generateContent",e.STREAM_GENERATE_CONTENT="streamGenerateContent",e.COUNT_TOKENS="countTokens",e.EMBED_CONTENT="embedContent",e.BATCH_EMBED_CONTENTS="batchEmbedContents"})(k||(k={}));var V=class{constructor(n,t,i,r,s){this.model=n,this.task=t,this.apiKey=i,this.stream=r,this.requestOptions=s}toString(){var n,t;let i=((n=this.requestOptions)===null||n===void 0?void 0:n.apiVersion)||Le,s=`${((t=this.requestOptions)===null||t===void 0?void 0:t.baseUrl)||Be}/${i}/${this.model}:${this.task}`;return this.stream&&(s+="?alt=sse"),s}};function je(e){let n=[];return e!=null&&e.apiClient&&n.push(e.apiClient),n.push(`${He}/${Ke}`),n.join(" ")}async function $e(e){var n;let t=new Headers;t.append("Content-Type","application/json"),t.append("x-goog-api-client",je(e.requestOptions)),t.append("x-goog-api-key",e.apiKey);let i=(n=e.requestOptions)===null||n===void 0?void 0:n.customHeaders;if(i){if(!(i instanceof Headers))try{i=new Headers(i)}catch(r){throw new p(`unable to convert customHeaders value ${JSON.stringify(i)} to Headers: ${r.message}`)}for(let[r,s]of i.entries()){if(r==="x-goog-api-key")throw new p(`Cannot set reserved header name ${r}`);if(r==="x-goog-api-client")throw new p(`Header name ${r} can only be set using the apiClient field`);t.append(r,s)}}return t}async function Ue(e,n,t,i,r,s){let a=new V(e,n,t,i,s);return{url:a.toString(),fetchOptions:Object.assign(Object.assign({},qe(s)),{method:"POST",headers:await $e(a),body:r})}}async function R(e,n,t,i,r,s={},a=fetch){let{url:o,fetchOptions:l}=await Ue(e,n,t,i,r,s);return Ve(o,l,a)}async function Ve(e,n,t=fetch){let i;try{i=await t(e,n)}catch(r){Ye(r,e)}return i.ok||await We(i,e),i}function Ye(e,n){let t=e;throw e instanceof D||e instanceof p||(t=new g(`Error fetching from ${n.toString()}: ${e.message}`),t.stack=e.stack),t}async function We(e,n){let t="",i;try{let r=await e.json();t=r.error.message,r.error.details&&(t+=` ${JSON.stringify(r.error.details)}`,i=r.error.details)}catch(r){}throw new D(`Error fetching from ${n.toString()}: [${e.status} ${e.statusText}] ${t}`,e.status,e.statusText,i)}function qe(e){let n={};if((e==null?void 0:e.signal)!==void 0||(e==null?void 0:e.timeout)>=0){let t=new AbortController;(e==null?void 0:e.timeout)>=0&&setTimeout(()=>t.abort(),e.timeout),e!=null&&e.signal&&e.signal.addEventListener("abort",()=>{t.abort()}),n.signal=t.signal}return n}function W(e){return e.text=()=>{if(e.candidates&&e.candidates.length>0){if(e.candidates.length>1&&console.warn(`This response had ${e.candidates.length} candidates. Returning text from the first candidate only. Access response.candidates directly to use the other candidates.`),O(e.candidates[0]))throw new v(`${b(e)}`,e);return Je(e)}else if(e.promptFeedback)throw new v(`Text not available. ${b(e)}`,e);return""},e.functionCall=()=>{if(e.candidates&&e.candidates.length>0){if(e.candidates.length>1&&console.warn(`This response had ${e.candidates.length} candidates. Returning function calls from the first candidate only. Access response.candidates directly to use the other candidates.`),O(e.candidates[0]))throw new v(`${b(e)}`,e);return console.warn("response.functionCall() is deprecated. Use response.functionCalls() instead."),he(e)[0]}else if(e.promptFeedback)throw new v(`Function call not available. ${b(e)}`,e)},e.functionCalls=()=>{if(e.candidates&&e.candidates.length>0){if(e.candidates.length>1&&console.warn(`This response had ${e.candidates.length} candidates. Returning function calls from the first candidate only. Access response.candidates directly to use the other candidates.`),O(e.candidates[0]))throw new v(`${b(e)}`,e);return he(e)}else if(e.promptFeedback)throw new v(`Function call not available. ${b(e)}`,e)},e}function Je(e){var n,t,i,r;let s=[];if(!((t=(n=e.candidates)===null||n===void 0?void 0:n[0].content)===null||t===void 0)&&t.parts)for(let a of(r=(i=e.candidates)===null||i===void 0?void 0:i[0].content)===null||r===void 0?void 0:r.parts)a.text&&s.push(a.text),a.executableCode&&s.push("\n```"+a.executableCode.language+`
`+a.executableCode.code+"\n```\n"),a.codeExecutionResult&&s.push("\n```\n"+a.codeExecutionResult.output+"\n```\n");return s.length>0?s.join(""):""}function he(e){var n,t,i,r;let s=[];if(!((t=(n=e.candidates)===null||n===void 0?void 0:n[0].content)===null||t===void 0)&&t.parts)for(let a of(r=(i=e.candidates)===null||i===void 0?void 0:i[0].content)===null||r===void 0?void 0:r.parts)a.functionCall&&s.push(a.functionCall);if(s.length>0)return s}var Ze=[A.RECITATION,A.SAFETY,A.LANGUAGE];function O(e){return!!e.finishReason&&Ze.includes(e.finishReason)}function b(e){var n,t,i;let r="";if((!e.candidates||e.candidates.length===0)&&e.promptFeedback)r+="Response was blocked",!((n=e.promptFeedback)===null||n===void 0)&&n.blockReason&&(r+=` due to ${e.promptFeedback.blockReason}`),!((t=e.promptFeedback)===null||t===void 0)&&t.blockReasonMessage&&(r+=`: ${e.promptFeedback.blockReasonMessage}`);else if(!((i=e.candidates)===null||i===void 0)&&i[0]){let s=e.candidates[0];O(s)&&(r+=`Candidate was blocked due to ${s.finishReason}`,s.finishMessage&&(r+=`: ${s.finishMessage}`))}return r}function z(e){return this instanceof z?(this.v=e,this):new z(e)}function Xe(e,n,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i=t.apply(e,n||[]),r,s=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(d){i[d]&&(r[d]=function(u){return new Promise(function(h,y){s.push([d,u,h,y])>1||o(d,u)})})}function o(d,u){try{l(i[d](u))}catch(h){w(s[0][3],h)}}function l(d){d.value instanceof z?Promise.resolve(d.value.v).then(c,m):w(s[0][2],d)}function c(d){o("next",d)}function m(d){o("throw",d)}function w(d,u){d(u),s.shift(),s.length&&o(s[0][0],s[0][1])}}var ge=/^data\: (.*)(?:\n\n|\r\r|\r\n\r\n)/;function Qe(e){let n=e.body.pipeThrough(new TextDecoderStream("utf8",{fatal:!0})),t=nt(n),[i,r]=t.tee();return{stream:tt(i),response:et(r)}}async function et(e){let n=[],t=e.getReader();for(;;){let{done:i,value:r}=await t.read();if(i)return W(it(n));n.push(r)}}function tt(e){return Xe(this,arguments,function*(){let t=e.getReader();for(;;){let{value:i,done:r}=yield z(t.read());if(r)break;yield yield z(W(i))}})}function nt(e){let n=e.getReader();return new ReadableStream({start(i){let r="";return s();function s(){return n.read().then(({value:a,done:o})=>{if(o){if(r.trim()){i.error(new g("Failed to parse stream"));return}i.close();return}r+=a;let l=r.match(ge),c;for(;l;){try{c=JSON.parse(l[1])}catch(m){i.error(new g(`Error parsing JSON response: "${l[1]}"`));return}i.enqueue(c),r=r.substring(l[0].length),l=r.match(ge)}return s()})}}})}function it(e){let n=e[e.length-1],t={promptFeedback:n==null?void 0:n.promptFeedback};for(let i of e){if(i.candidates)for(let r of i.candidates){let s=r.index;if(t.candidates||(t.candidates=[]),t.candidates[s]||(t.candidates[s]={index:r.index}),t.candidates[s].citationMetadata=r.citationMetadata,t.candidates[s].groundingMetadata=r.groundingMetadata,t.candidates[s].finishReason=r.finishReason,t.candidates[s].finishMessage=r.finishMessage,t.candidates[s].safetyRatings=r.safetyRatings,r.content&&r.content.parts){t.candidates[s].content||(t.candidates[s].content={role:r.content.role||"user",parts:[]});let a={};for(let o of r.content.parts)o.text&&(a.text=o.text),o.functionCall&&(a.functionCall=o.functionCall),o.executableCode&&(a.executableCode=o.executableCode),o.codeExecutionResult&&(a.codeExecutionResult=o.codeExecutionResult),Object.keys(a).length===0&&(a.text=""),t.candidates[s].content.parts.push(a)}}i.usageMetadata&&(t.usageMetadata=i.usageMetadata)}return t}async function we(e,n,t,i){let r=await R(n,k.STREAM_GENERATE_CONTENT,e,!0,JSON.stringify(t),i);return Qe(r)}async function ve(e,n,t,i){let s=await(await R(n,k.GENERATE_CONTENT,e,!1,JSON.stringify(t),i)).json();return{response:W(s)}}function be(e){if(e!=null){if(typeof e=="string")return{role:"system",parts:[{text:e}]};if(e.text)return{role:"system",parts:[e]};if(e.parts)return e.role?e:{role:"system",parts:e.parts}}}function x(e){let n=[];if(typeof e=="string")n=[{text:e}];else for(let t of e)typeof t=="string"?n.push({text:t}):n.push(t);return rt(n)}function rt(e){let n={role:"user",parts:[]},t={role:"function",parts:[]},i=!1,r=!1;for(let s of e)"functionResponse"in s?(t.parts.push(s),r=!0):(n.parts.push(s),i=!0);if(i&&r)throw new g("Within a single message, FunctionResponse cannot be mixed with other type of part in the request for sending chat message.");if(!i&&!r)throw new g("No content is provided for sending chat message.");return i?n:t}function st(e,n){var t;let i={model:n==null?void 0:n.model,generationConfig:n==null?void 0:n.generationConfig,safetySettings:n==null?void 0:n.safetySettings,tools:n==null?void 0:n.tools,toolConfig:n==null?void 0:n.toolConfig,systemInstruction:n==null?void 0:n.systemInstruction,cachedContent:(t=n==null?void 0:n.cachedContent)===null||t===void 0?void 0:t.name,contents:[]},r=e.generateContentRequest!=null;if(e.contents){if(r)throw new p("CountTokensRequest must have one of contents or generateContentRequest, not both.");i.contents=e.contents}else if(r)i=Object.assign(Object.assign({},i),e.generateContentRequest);else{let s=x(e);i.contents=[s]}return{generateContentRequest:i}}function fe(e){let n;return e.contents?n=e:n={contents:[x(e)]},e.systemInstruction&&(n.systemInstruction=be(e.systemInstruction)),n}function at(e){return typeof e=="string"||Array.isArray(e)?{content:x(e)}:e}var me=["text","inlineData","functionCall","functionResponse","executableCode","codeExecutionResult"],ot={user:["text","inlineData"],function:["functionResponse"],model:["text","functionCall","executableCode","codeExecutionResult"],system:["text"]};function lt(e){let n=!1;for(let t of e){let{role:i,parts:r}=t;if(!n&&i!=="user")throw new g(`First content should be with role 'user', got ${i}`);if(!re.includes(i))throw new g(`Each item should include role field. Got ${i} but valid roles are: ${JSON.stringify(re)}`);if(!Array.isArray(r))throw new g("Content should have 'parts' property with an array of Parts");if(r.length===0)throw new g("Each Content should have at least one part");let s={text:0,inlineData:0,functionCall:0,functionResponse:0,fileData:0,executableCode:0,codeExecutionResult:0};for(let o of r)for(let l of me)l in o&&(s[l]+=1);let a=ot[i];for(let o of me)if(!a.includes(o)&&s[o]>0)throw new g(`Content with role '${i}' can't contain '${o}' part`);n=!0}}var pe="SILENT_ERROR",Y=class{constructor(n,t,i,r={}){this.model=t,this.params=i,this._requestOptions=r,this._history=[],this._sendPromise=Promise.resolve(),this._apiKey=n,i!=null&&i.history&&(lt(i.history),this._history=i.history)}async getHistory(){return await this._sendPromise,this._history}async sendMessage(n,t={}){var i,r,s,a,o,l;await this._sendPromise;let c=x(n),m={safetySettings:(i=this.params)===null||i===void 0?void 0:i.safetySettings,generationConfig:(r=this.params)===null||r===void 0?void 0:r.generationConfig,tools:(s=this.params)===null||s===void 0?void 0:s.tools,toolConfig:(a=this.params)===null||a===void 0?void 0:a.toolConfig,systemInstruction:(o=this.params)===null||o===void 0?void 0:o.systemInstruction,cachedContent:(l=this.params)===null||l===void 0?void 0:l.cachedContent,contents:[...this._history,c]},w=Object.assign(Object.assign({},this._requestOptions),t),d;return this._sendPromise=this._sendPromise.then(()=>ve(this._apiKey,this.model,m,w)).then(u=>{var h;if(u.response.candidates&&u.response.candidates.length>0){this._history.push(c);let y=Object.assign({parts:[],role:"model"},(h=u.response.candidates)===null||h===void 0?void 0:h[0].content);this._history.push(y)}else{let y=b(u.response);y&&console.warn(`sendMessage() was unsuccessful. ${y}. Inspect response object for details.`)}d=u}),await this._sendPromise,d}async sendMessageStream(n,t={}){var i,r,s,a,o,l;await this._sendPromise;let c=x(n),m={safetySettings:(i=this.params)===null||i===void 0?void 0:i.safetySettings,generationConfig:(r=this.params)===null||r===void 0?void 0:r.generationConfig,tools:(s=this.params)===null||s===void 0?void 0:s.tools,toolConfig:(a=this.params)===null||a===void 0?void 0:a.toolConfig,systemInstruction:(o=this.params)===null||o===void 0?void 0:o.systemInstruction,cachedContent:(l=this.params)===null||l===void 0?void 0:l.cachedContent,contents:[...this._history,c]},w=Object.assign(Object.assign({},this._requestOptions),t),d=we(this._apiKey,this.model,m,w);return this._sendPromise=this._sendPromise.then(()=>d).catch(u=>{throw new Error(pe)}).then(u=>u.response).then(u=>{if(u.candidates&&u.candidates.length>0){this._history.push(c);let h=Object.assign({},u.candidates[0].content);h.role||(h.role="model"),this._history.push(h)}else{let h=b(u);h&&console.warn(`sendMessageStream() was unsuccessful. ${h}. Inspect response object for details.`)}}).catch(u=>{u.message!==pe&&console.error(u)}),d}};async function ut(e,n,t,i){return(await R(n,k.COUNT_TOKENS,e,!1,JSON.stringify(t),i)).json()}async function dt(e,n,t,i){return(await R(n,k.EMBED_CONTENT,e,!1,JSON.stringify(t),i)).json()}async function ct(e,n,t,i){let r=t.requests.map(a=>Object.assign(Object.assign({},a),{model:n}));return(await R(n,k.BATCH_EMBED_CONTENTS,e,!1,JSON.stringify({requests:r}),i)).json()}var F=class{constructor(n,t,i={}){this.apiKey=n,this._requestOptions=i,t.model.includes("/")?this.model=t.model:this.model=`models/${t.model}`,this.generationConfig=t.generationConfig||{},this.safetySettings=t.safetySettings||[],this.tools=t.tools,this.toolConfig=t.toolConfig,this.systemInstruction=be(t.systemInstruction),this.cachedContent=t.cachedContent}async generateContent(n,t={}){var i;let r=fe(n),s=Object.assign(Object.assign({},this._requestOptions),t);return ve(this.apiKey,this.model,Object.assign({generationConfig:this.generationConfig,safetySettings:this.safetySettings,tools:this.tools,toolConfig:this.toolConfig,systemInstruction:this.systemInstruction,cachedContent:(i=this.cachedContent)===null||i===void 0?void 0:i.name},r),s)}async generateContentStream(n,t={}){var i;let r=fe(n),s=Object.assign(Object.assign({},this._requestOptions),t);return we(this.apiKey,this.model,Object.assign({generationConfig:this.generationConfig,safetySettings:this.safetySettings,tools:this.tools,toolConfig:this.toolConfig,systemInstruction:this.systemInstruction,cachedContent:(i=this.cachedContent)===null||i===void 0?void 0:i.name},r),s)}startChat(n){var t;return new Y(this.apiKey,this.model,Object.assign({generationConfig:this.generationConfig,safetySettings:this.safetySettings,tools:this.tools,toolConfig:this.toolConfig,systemInstruction:this.systemInstruction,cachedContent:(t=this.cachedContent)===null||t===void 0?void 0:t.name},n),this._requestOptions)}async countTokens(n,t={}){let i=st(n,{model:this.model,generationConfig:this.generationConfig,safetySettings:this.safetySettings,tools:this.tools,toolConfig:this.toolConfig,systemInstruction:this.systemInstruction,cachedContent:this.cachedContent}),r=Object.assign(Object.assign({},this._requestOptions),t);return ut(this.apiKey,this.model,i,r)}async embedContent(n,t={}){let i=at(n),r=Object.assign(Object.assign({},this._requestOptions),t);return dt(this.apiKey,this.model,i,r)}async batchEmbedContents(n,t={}){let i=Object.assign(Object.assign({},this._requestOptions),t);return ct(this.apiKey,this.model,n,i)}};var I=class{constructor(n){this.apiKey=n}getGenerativeModel(n,t){if(!n.model)throw new g("Must provide a model name. Example: genai.getGenerativeModel({ model: 'my-model-name' })");return new F(this.apiKey,n,t)}getGenerativeModelFromCachedContent(n,t,i){if(!n.name)throw new p("Cached content must contain a `name` field.");if(!n.model)throw new p("Cached content must contain a `model` field.");let r=["model","systemInstruction"];for(let a of r)if(t!=null&&t[a]&&n[a]&&(t==null?void 0:t[a])!==n[a]){if(a==="model"){let o=t.model.startsWith("models/")?t.model.replace("models/",""):t.model,l=n.model.startsWith("models/")?n.model.replace("models/",""):n.model;if(o===l)continue}throw new p(`Different value for "${a}" specified in modelParams (${t[a]}) and cachedContent (${n[a]})`)}let s=Object.assign(Object.assign({},t),{model:n.model,tools:n.tools,toolConfig:n.toolConfig,systemInstruction:n.systemInstruction,cachedContent:n});return new F(this.apiKey,s,i)}};var T=require("obsidian");var Ee=`**Eingabe:** Der Agent erh\xE4lt Texteingaben in einem der folgenden Formate:

1. **Deutsch (DE):** Eine Textzeichenfolge in deutscher Sprache.
2. **Russisch (RU):** Eine Textzeichenfolge in russischer Sprache.
3. **Russisch und Deutsch (RU & DE):** Zwei Textzeichenfolgen, wobei der Agent davon ausgehen soll, dass der russische Text eine \xDCbersetzung des deutschen Textes ist. Diese werden deutlich abgegrenzt (z. B. durch eine bestimmte Markierung wie "---" oder als separate Eingaben bereitgestellt).

**Aufgabe:** Das Verhalten des Agenten h\xE4ngt vom Eingabeformat ab:

* **Deutsche Eingabe (DE):** Der Agent identifiziert und erkl\xE4rt grammatikalische Fehler im deutschen Text, *ohne* Vokabel\xE4nderungen vorzuschlagen. Geben Sie f\xFCr jeden Fehler eine kurze Erkl\xE4rung an.  Fehlerhafte W\xF6rter sollen dabei *kursiv* hervorgehoben werden. Wenn der Text grammatikalisch korrekt ist, gibt der Agent nur "\u2705" aus.

* **Russische Eingabe (RU):** Der Agent \xFCbersetzt den russischen Text so gut wie m\xF6glich ins Deutsche. Die Ausgabe ist die deutsche \xDCbersetzung.

* **Russische und Deutsche Eingabe (RU & DE):** Der Agent analysiert den russischen Text als m\xF6gliche \xDCbersetzung des deutschen Textes. Er pr\xFCft sowohl die grammatikalische als auch die lexikalische Korrektheit. Bei Fehlern in der \xDCbersetzung (grammatikalisch oder lexikalisch) gibt der Agent eine kurze Erkl\xE4rung an. Fehlerhafte W\xF6rter in der *deutschen \xDCbersetzung* sollen dabei *kursiv* hervorgehoben werden. Wenn die \xDCbersetzung/der Satz korrekt ist, gibt der Agent nur "\u2705" aus.

**Ausgabeformat:**

Die Ausgabe des Agenten besteht *nur* aus:

* Fehlererkl\xE4rungen (f\xFCr DE- und RU&DE-Eingaben, wenn Fehler gefunden werden).
* Der deutschen \xDCbersetzung (f\xFCr RU-Eingaben).
* "\u2705" (wenn die Eingabe korrekt oder die \xDCbersetzung richtig ist).

Die Ausgabe soll kurz sein und alle zus\xE4tzlichen Kommentare oder Erkl\xE4rungen vermeiden, die nicht ausdr\xFCcklich angefordert werden. Es sind keine einleitenden oder abschlie\xDFenden Bemerkungen erforderlich. Halten Sie dieses strikte Ausgabeformat ein.

**Beispiele:**

<example>
<input>
\u041E\u043D \u0447\u0438\u0442\u0430\u0435\u0442 \u043A\u043D\u0438\u0433\u0443.
</input>
<output>
Er liest ein Buch.
</output>
</example>

<example>
<input>
Ich m\xF6chte ein Apfel.
</input>
<output>
Ich m\xF6chte *einen* Apfel.
"Apfel" is masculine, so the article should be "einen" (accusative) in this context.
</output>
</example>

<example>
<input>
Sie hat gesagt, dass sie m\xFCde ist.
\u041E\u043D\u0430 \u0441\u043A\u0430\u0437\u0430\u043B\u0430, \u0447\u0442\u043E \u043E\u043D\u0430 \u0443\u0441\u0442\u0430\u043B\u0430.
</input>
<output>
\u2705
</output>
</example>

<example>
<input>
\u041C\u044B \u043F\u043E\u0439\u0434\u0435\u043C \u0433\u0443\u043B\u044F\u0442\u044C \u0437\u0430\u0432\u0442\u0440\u0430.
</input>
<output>
Wir werden morgen spazieren gehen.
</output>
</example>

<example>
<input>
Ich habe kein Zeit.
</input>
<output>
Ich habe *keine* Zeit.
Das Wort "kein" sollte "keine" sein, da "Zeit" feminin ist (Nominativ oder Akkusativ).
</output>
</example>`;var ye=`Given a german word, determine its infinitive form and pick an appropriate emoji to represent it. If the word is a noun, determin it's gender and use \u{1F535} for der,  \u{1F534} for die, if \u{1F7E2} for das. Do not write anything else, just the infinitive and an emoji. given "brutzelt" reply with "\u{1F373} [[brutzeln]]". Given "gesorgt" reply with "\u{1F914} [[sorgen]]". Given "Hoffnungen" reply with "\u{1F534} die [[Hoffnung]] \u{1F54A}\uFE0F". Given "eisigen", reply with "\u{1F976} [[eisig]]". If a word can be a form of multiple parts of speach, list all options, separated with |. For expample, given "vergangene", reply with "\u{1F570}\uFE0F [[vergangen]] | \u{1F570}\uFE0F [[vergehen]]". Given "Nieser", reply with "\u{1F927} [[niesen]] | \u{1F535} der [[Nieser]] \u{1F927}". Given "klares", reply with "\u{1F60C} [[kl\xE4ren]] | \u{1F60C} [[klar]] | \u{1F7E2} das [[Klare]] \u{1F60C}. Given "zweiteste", reply with "2\uFE0F\u20E3 [[zwei]]". Given "Auftragslage", reply with "\u{1F4C8} [[Auftragslage]]". The output should be compact, without extra spaces or newlines.`;var _e=`You are an expert linguist specializing in the German language. Your task is to create a detailed dictionary entry for a given German word. Here's the word you need to analyze:
<german_word>
{{german_word}}
</german_word>

Before creating the entry, analyze the word and plan your approach. Break down the word inside <word_breakdown> tags:

1. Identify the part of speech of the word.
2. If it's a verb:
- Determine if it's trennbar (separable) or untrennbar (inseparable).
- Identify its tense forms (present, past, perfect).
- Note any irregular conjugations. -Fill the list of cojugations (Pr\xE4sens, Pr\xE4teritum, Imperativ, Konjunktiv I, Konjunktiv II) 
3. For nouns:
- Identify the gender (masculine, feminine, or neuter).
- Determine the declension pattern.
4. For adjectives:
- Note the comparative and superlative forms.
5. Identify and list examples of each morpheme in the word.
6. Plan which template you'll use based on the part of speech.
7. List the key information you'll need to include in the entry (e.g., pronunciation, conjugations, synonyms, antonyms, translations, morphemes).

It's OK for this section to be quite long.

Now, create the dictionary entry using the appropriate template based on your analysis. Strictly adhere to the format provided in the examples, ensuring no additional text is included that isn't present in the templates. Use the following guidelines:

1. For trennbar verbs:
- Start with an appropriate emoji
- Include pronunciation, conjugations, synonyms, antonyms, English and Russian translations, morpheme breakdown, and a conjugation table

2. For untrennbar verbs and verbs without prefixes:
- Follow a similar format to trennbar verbs, adjusting the conjugation details as needed

3. For adjectives:
- Start with an appropriate emoji
- Include pronunciation, antonyms, synonyms, English and Russian translations, and unique possible forms

4. For nouns:
- Use \u{1F534} for feminine, \u{1F7E2} for neuter, and \u{1F535} for masculine nouns
- Include plural form, synonyms, English and Russian translations, morpheme breakdown, and unique possible forms

5. For other parts of speech:
- Create a similar template, adapting the information as appropriate for the specific part of speech

Present only your final entry. Do not present the user with word_breakdown. Do not write to the user your thought process.
<examples>
<example>
<german_word>
verfeinden
</german_word>
<ideal_output>
\u{1F624} [[verfeinden]], [f\u025B\u0250\u032F\u02C8fa\u026A\u032Fndn\u0329] | [[verfeindete]], haben [[verfeindet]]

---


---
= [[zerstreiten]], [[entzweien]]
\u2248 Feindschaft  [[schlie\xDFen]], [[verkrachen]], in Konflikt [[geraten]]
\u2260 [[vers\xF6hnen]], [[vertragen]], [[anfreunden]]

---
to make enemies, to set at odds
\u043F\u043E\u0441\u0441\u043E\u0440\u0438\u0442\u044C, \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0432\u0440\u0430\u0433\u0430\u043C\u0438

---
[[ver]]|[[fein]]|[den]]

---
ich: [[verfeinde]], [[verfeindete]], \u2013, [[verfeinde]], [[verfeindete]]
du: [[verfeindest]], [[verfeindetest]], [[verfeinde]] | [[verfeind]] | [[verfeinde]], [[verfeindest]], [[verfeindetest]]
er/sie/es: [[verfeindet]], [[verfeindete]], \u2013, [[verfeinde]], [[verfeindete]]
wir: [[verfeinden]], [[verfeindeten]], [[verfeinden wir|verfeinden]], [[verfeinden]], [[verfeindeten]]
ihr: [[verfeindet]], [[verfeindetet]], [[verfeindet]], [[verfeindet]], [[verfeindetet]] 

PI: [[verfeindend]], PII: [[verfeindet]], Zu+inf: [[zuverfeinden]]

---
[[verfeinden]] - [[ver]] = [[feinden]] / to make enemies, to set at odds

---
[[Verfehndung]], [[Verfeindung]], [[Feind]], [[feindlich]], [[Feindschaft]]

</ideal_output>
</example>

<example>
<german_word>
tanztest
</german_word>
<ideal_output>
\u{1F483} [[tanzen]], [\u02C8tan\u02A6n\u0329] | [[tanzte]], haben [[getanzt]]

---

---
= [[sich bewegen]], [[schwofen]], [[abhotten]]
\u2248 [[wiegen]], [[sich drehen]], [[h\xFCpfen]], [[ballettieren]]
\u2260 [[sitzen]], [[stehen]], [[verharren]], [[ruhen]]

---
to dance
\u0442\u0430\u043D\u0446\u0435\u0432\u0430\u0442\u044C

---
[[tanz]]|[[en]]

---
ich: [[tanze]], [[tanzte]], \u2013, [[tanze]], [[tanzte]]
du: [[tanzt]], [[tanzt]], [[tanze]] | [[tanz]], [[tanzt]], [[tanztest]]
er/sie/es: [[tanzt]], [[tanzte]], \u2013, [[tanze]], [[tanzte]]
wir: [[tanzen]], [[tanzten]], [[tanzen wir|tanzen]], [[tanzen]], [[tanzten]]
ihr: [[tanzt]], [[tanztet]], [[tanzt]], [[tanzt]], [[tanztet]]

PI: [[tanzend]], PII: [[getanzt]], Zu+inf: [[zu tanzen]]

---

---
[[Tanz]], [[T\xE4nzer]], [[T\xE4nzerin]], [[Tanzfl\xE4che]], [[tanzerisch]], [[Tanzkurs]]
</ideal_output>
</example>

<example>
<german_word>
Hoffnung
</german_word>
<ideal_output>
\u{1F534} \u{1F54A}\uFE0F die [[Hoffnung]], [\u02C8h\u0254fn\u028A\u014B]
die [[Hoffnungen]]

---


---
= [[Zuversicht]], [[Optimismus]]
\u2248 [[Erwartung]], [[Vertrauen]], [[Glaube]], [[Wunsch]]
\u2260 [[Verzweiflung]], [[Pessimismus]], [[Hoffnungslosigkeit]], [[Resignation]]

---
hope
\u043D\u0430\u0434\u0435\u0436\u0434\u0430

---
[[Hoff]]|[[nung]]

---
N: die [[Hoffnung]], die [[Hoffnungen]]  
A: die [[Hoffnung]], die [[Hoffnungen]]  
G: der [[Hoffnung]], der [[Hoffnungen]]  
D: der [[Hoffnung]], den [[Hoffnungen]]  

---
[[hoffen]], [[hoffentlich]], [[hoffnungsvoll]], [[hoffnungslos]]
</ideal_output>
</example>

<example>
<german_word>
Busch
</german_word>
<ideal_output>
\u{1F535} \u{1F333} der [[Busch]]
die [[B\\xFCsche]]

---


---
= [[Strauch]], [[Gestr\xE4uch]]
\u2248 [[Geb\xFCsch]], [[Hecke]], [[Geh\xF6lz]]
\u2260 [[Baum]], [[Wiese]], [[Ackerland]], [[\xD6dland]]

---
bush, shrub
\u043A\u0443\u0441\u0442

---
[[Busch]]

---
N: der [[Busch]], die [[B\xFCsche]]  
A: den [[Busch]], die [[B\xFCsche]]  
G: des [[Busches]], der [[B\xFCsche]]  
D: dem [[Busch]], den [[B\xFCschen]] 

---
buschig, buschieren
</ideal_output>
</example>

<example>
<german_word>
klein
</german_word>
<ideal_output>
\u{1F42D} [[klein]], [\\u02C8kla\\u026A\\u032Fn] \u2260 [[gro\\xDF]]

---


---
= [[kompakt]], [[winzig]], [[gering]]
\u2248 [[niedrig]], [[schmal]], [[zierlich]], [[zart]], [[begrenzt]]
\u2260 [[gro\xDF]], [[riesig]], [[weit]], [[breit]]

---
small, little
\u043C\u0430\u043B\u0435\u043D\u044C\u043A\u0438\u0439

---
[[klein]]

---
N: [[klein]], [[kleiner]], [[kleinster]]  
A: [[kleinen]], [[kleineren]], [[kleinsten]]  
G: [[kleiner]], [[kleinerer]], [[kleinster]]  
D: [[kleinem]], [[kleinerem]], [[kleinstem]]  
F: [[kleine]], [[kleinere]], [[kleinste]]  
N: [[kleines]], [[kleineres]], [[kleinstes]]  
P: [[kleinen]], [[kleineren]], [[kleinsten]]  

---
[[Kleinheit]], [[kleinlich]], [[kleinmachen]]
</ideal_output>
</example>
<example>
<german_word>
anzurufen
</german_word>
<ideal_output>
\u{1F4DE} [[anrufen]], [\u02C8an\u02A6u\u02CC\u0281u\u02D0f\u0259n] | [[rief an]], haben [[angerufen]]

---


---
= [[telefonieren]], [[kontaktieren]], [[anklingeln]]
\u2248 [[sich melden]], [[Kontakt aufnehmen]], [[durchklingeln]]
\u2260 [[ignorieren]], [[ablehnen]], [[auflegen]], [[beenden]]

---
to call, to phone
\u0437\u0432\u043E\u043D\u0438\u0442\u044C 

---
[[an]]|[[ru]]|[[fen]]

---
ich: [[rufe an]], [[rief an]], \u2013, [[rufe an]], [[riefe an]]
du: [[rufst an]], [[riefst an]], [[rufe an]] | [[ruf an]], [[rufest an]], [[riefest an]]
er/sie/es: [[ruft an]], [[rief an]], \u2013, [[rufe an]], [[riefe an]]
wir: [[rufen an]], [[riefen an]], [[rufen wir an|rufen an]], [[rufen an]], [[riefen an]]
ihr: [[ruft an]], [[rieft an]], [[ruft an]], [[rufet an]], [[riefet an]]

PI: [[anrufend]], PII: [[angerufen]], Zu+inf: [[anzurufen]]

---
[[anrufen]] - [[an]] = [[rufen]] / to call, to phone

---
[[Anruf]], [[Anrufer]], [[Anruferin]], [[anrufbar]], [[Anrufbeantworter]]
</ideal_output>
</example>
<example>
<german_word>
st\xE4ndigen
</german_word>
<ideal_output>
\u{1F570}\uFE0F [[st\xE4ndig]], [\u02C8\u0283t\u025Bnd\u026A\xE7] \u2260 [[selten]]

---


---
= [[fortw\xE4hrend]], [[dauerhaft]], [[andauernd]]
\u2248 [[permanent]], [[kontinuierlich]], [[best\xE4ndig]], [[ununterbrochen]], [[pausenlos]]
\u2260 [[selten]], [[gelegentlich]], [[unregelm\xE4\xDFig]], [[sporadisch]]

---
constantly, continuously, persistently, perpetually
\u043F\u043E\u0441\u0442\u043E\u044F\u043D\u043D\u044B\u0439, \u043D\u0435\u043F\u0440\u0435\u0440\u044B\u0432\u043D\u044B\u0439, \u0431\u0435\u0441\u043F\u0440\u0435\u0441\u0442\u0430\u043D\u043D\u044B\u0439

---
[[st\xE4n]]|[[dig]]

---
N: [[st\xE4ndig]], [[st\xE4ndiger]], [[st\xE4ndigster]]  
A: [[st\xE4ndigen]], [[st\xE4ndigeren]], [[st\xE4ndigsten]]  
G: [[st\xE4ndigen]], [[st\xE4ndigeren]], [[st\xE4ndigsten]]  
D: [[st\xE4ndigem]], [[st\xE4ndigeren]], [[st\xE4ndigstem]]  
F: [[st\xE4ndige]], [[st\xE4ndigere]], [[st\xE4ndigste]]  
N: [[st\xE4ndiges]], [[st\xE4ndigeres]], [[st\xE4ndigstes]]  
P: [[st\xE4ndigen]], [[st\xE4ndigeren]], [[st\xE4ndigsten]]  

---
[[stehen]], [[St\xE4ndigkeit]], [[zust\xE4ndig]], [[anst\xE4ndig]], [[best\xE4ndig]], [[aufst\xE4ndig]]
</ideal_output>
</example>

<example>
<german_word>
zweiteres
</german_word>
<ideal_output>
2\uFE0F\u20E3 [[zwei]], [t\u0361sva\u026A\u032F]  

---

---
= [[doppelt]], [[beide]], [[paar]]  
\u2248 [[ein paar]], [[mehrere]], [[einige]]  
\u2260 [[eins]], [[drei]], [[keiner]]  

---
two  
\u0434\u0432\u0430  

---
[[zwei]]  

---
N: [[zwei]]  
A: [[zwei]]  
G: [[zweier]]  
D: [[zweien]]  

---
\u{1F4CF} **Konjugierte Ordinalzahlen**  
N: [[zweite]], [[zweiter]], [[zweites]], [[zweiten]]  
A: [[zweiten]], [[zweiteren]], [[zweiten]]  
G: [[zweiten]], [[zweiterer]], [[zweiten]]  
D: [[zweitem]], [[zweiterem]], [[zweiten]]  
F: [[zweite]], [[zweitere]], [[zweiteste]]  
N: [[zweites]], [[zweiteres]], [[zweitestes]]  
P: [[zweiten]], [[zweiteren]], [[zweitesten]]  

---
\u{1F4CA} **Konjugierte Indefinitzahlen** *(if applicable)*  
(none for zwei)  

---
[[zweitens]], [[zweifach]], [[zwilling]], [[zweierlei]], [[zweiundzwanzig]], [[der Zweite]], [[zweitweise]], [[zweimalig]]
</ideal_output>
</example>


<example>
<german_word>
einzigsten
</german_word>
<ideal_output>
1\uFE0F\u20E3 [[eins]], [a\u026A\u032Fns] | [[ein]], [a\u026A\u032Fn]  

---
= [[einziger]], [[einer]], [[einmal]]  
\u2248 [[gewisser]], [[irgendein]], [[ein paar]]  
\u2260 [[null]], [[zwei]], [[kein]]  

---
one, a/an, single  
\u043E\u0434\u0438\u043D, \u043D\u0435\u043A\u0438\u0439, \u043A\u0430\u043A\u043E\u0439-\u0442\u043E  

---
[[ein]]  

---
N: [[ein]], [[eins]]  
A: [[ein]]  
G: [[eines]]  
D: [[einem]]  

---
\u{1F4CF} **Konjugierte Ordinalzahlen**  
N: [[erste]], [[erster]], [[erstes]], [[ersten]]  
A: [[ersten]], [[ersteren]], [[ersten]]  
G: [[ersten]], [[ersterer]], [[ersten]]  
D: [[erstem]], [[ersterem]], [[ersten]]  
F: [[erste]], [[erstere]], [[ersteste]]  
N: [[erstes]], [[ersteres]], [[erstestes]]  
P: [[ersten]], [[ersteren]], [[erstesten]]  

---
\u{1F4CA} **Konjugierte Indefinitzahlen**  
N: [[einige]], [[einer]], [[einziges]], [[einigen]]  
A: [[einigen]], [[einiger]], [[einzigsten]]  
G: [[einiger]], [[einigerer]], [[einzigster]]  
D: [[einigem]], [[einigerem]], [[einzigstem]]  
F: [[einige]], [[einige]], [[einzigste]]  
N: [[einiges]], [[einigeres]], [[einzigstes]]  
P: [[einigen]], [[einigeren]], [[einzigsten]]  

---
[[einmal]], [[einzig]], [[einer]], [[einige]], [[erstens]], [[einheit]], [[einzel]], [[einzigartig]], [[einmalig]]
</ideal_output>
</example>

<example>
<german_word>
traurig
</german_word>
<ideal_output>
\u{1F622} [[traurig]], [\u02C8t\u0281a\u028A\u032F\u0281\u026A\xE7]
nicht [[fr\xF6hlich]]

---


---
= [[betr\xFCbt]], [[bek\xFCmmert]], [[niedergeschlagen]]
\u2248 [[melancholisch]], [[wehm\xFCtig]], [[bedr\xFCckt]]
\u2260 [[fr\xF6hlich]], [[gl\xFCcklich]], [[heiter]], [[vergn\xFCgt]]

---
sad, sorrowful
\u0433\u0440\u0443\u0441\u0442\u043D\u044B\u0439, \u043F\u0435\u0447\u0430\u043B\u044C\u043D\u044B\u0439

---
[[trau]]|[[rig]]

---
N: [[traurig]], [[trauriger]], [[traurigster]]  
A: [[traurigen]], [[traurigeren]], [[traurigsten]]  
G: [[trauriger]], [[traurigerer]], [[traurigster]]  
D: [[traurigem]], [[traurigerem]], [[traurigstem]]  
F: [[traurige]], [[traurigere]], [[traurigste]]  
N: [[trauriges]], [[traurigeres]], [[traurigstes]]  
P: [[traurigen]], [[traurigeren]], [[traurigsten]]  

---
[[Trauer]], [[trauern]], [[Traurigkeit]], [[betrauern]], [[trauernd]]
</ideal_output>
</example>
<example>
<german_word>
obwohl
</german_word>
<ideal_output>
\u{1F517} [[obwohl]], [\u0254p\u02C8vo\u02D0l]

---


---
= [[obgleich]], [[wenngleich]], [[obschon]]
\u2248 [[dennoch]], [[gleichwohl]], [[trotzdem]], [[nichtsdestotrotz]]
\u2260 [[weil]], [[denn]], [[deshalb]], [[daher]]

---
although, even though, despite
\u0445\u043E\u0442\u044F, \u043D\u0435 \u0441\u043C\u043E\u0442\u0440\u044F \u043D\u0430 

---
[[ob]]|[[wohl]]

---
[[trotz]], [[obschon]], [[obzwar]], [[wiewohl]], [[obgleich]]
</ideal_output>
</example>
<example>
<german_word>
Rechercheergebnisse
</german_word>
<ideal_output>
\u{1F7E2} \u{1F4C4} das [[Rechercheergbenis]], [re\u02C8\u0283\u025Br\u0283\u0259\u0294\u025B\u0250\u032F\u0261e\u02D0pn\u026As]
die [[Rechercheergbnisse]]

---


---
= [[Untersuchungsergebnis]], [[Forschungsergebnis]]
\u2248 [[Ergebnis]], [[Resultate]], [[Erkenntnisse]], [[Befund]]
\u2260 [[Hypothese]], [[Vermutung]], [[Spekulation]]

---
research result, findings
\u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u044B \u0438\u0441\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u043D\u0438\u044F

---
[[Recher\xADche]]+[[ergeb\xADnis]]
[[Re]]|[[cher]]|[[che]]|[[er]]|[[geb]]|[[nis]]

---
N: das [[Rechercheergbenis]], die [[Rechercheergbnisse]]  
A: das [[Rechercheergbenis]], die [[Rechercheergbnisse]]  
G: des [[Rechercheergbnis\xADses]], der [[Rechercheergbnisse]]  
D: dem [[Rechercheergbnis]], den [[Rechercheergbnissen]]  

---
[[recherchieren]], [[Recherche]], [[ergebnisorientiert]], [[Forschung]]
</ideal_output>
</example>
</examples>
`;var ke=`You are a highly advanced linguistic parser trained in **german syntax analysis**. your task is to process sentences by identifying their grammatical structure and annotating key elements using Obsidian links markdown notation.
Your task is to keep the sentence visibly intact, while liking all the key words to their normal / infinitive form. Focus on spotting and correcty identifying the separabe words. See instructions below on how to procesess them.

## <instructions>
1. **normalize all words to their base form**:
    - brutzelt \u2192 [[brutzeln|brutzelt]]
    - gesorgt \u2192 [[sorgen|gesorgt]]
    - sorgen \u2192 [[sorgen]]
    - Katze \u2192 [[Katze]]
    - Hoffnungen \u2192 [[Hoffnung|Hoffnungen]]
    - eisigen \u2192 [[eisig|eisigen]]
    - einzigsten \u2192 [[eins|einzigsten]]
    - zweiteste \u2192 [[zwei|zweiteste]]
2. **identify and tag verbs** with their infinitive forms, keeping their conjugation visible**, except for *haben, sein,* and *werden*, which remain untagged:
    - hat \u2192 hat
    - lie\xDF \u2192 [[lassen|lie\xDF]]
    - werden verbunden \u2192 werden ... [[verbinden|verbunden]]
3. **handle separable verbs properly** by tagging both parts:
    - h\xE4ngst auf \u2192 [[aufh\xE4ngen|h\xE4ngst]] ... [[aufh\xE4ngen|auf]]
    - weiterhelfen \u2192 [[weiterhelfen|weiter]] ... [[weiterhelfen|helfen]]
    - vorbeikommen \u2192 [[vorbeikommen]]
4. **convert numerals and ordinal numbers properly**:
    - zweiteste \u2192 [[zwei]]
    - drittes \u2192 [[drei]]
5. **convert abbreviations to their expanded form where applicable**:
    - z.B. \u2192 [[zum Beispiel|z.B.]]
6. **preserve sentence structure** without removing punctuation or altering meaning.
7. **ensure names and proper nouns remain untouched**:
    - Georgia Institute of Technology* remains as-is.
    - *Avoid introducing typos in names** (e.g., *Laupsien* must not become *Laupien*).
8. **do not enclose pronouns or function words** (e.g., *mein, mich, dein, unser, ihr* remain untagged).
9. **plural nouns must be linked to their singular forms**:
    - Krabbenschalen \u2192 [[Krabbenschale|Krabbenschalen]]
    - Baumfasern \u2192 [[Baumfaser|Baumfasern]]
    - Ausgangsmaterialien \u2192 [[Ausgangsmaterial|Ausgangsmaterialien]]
10. all conjugated verbs must be linked to their infinitive base form, including past tense:
    \u2022	verwendeten \u2192 [[verwenden|verwendeten]]
    \u2022	nahm \u2192 [[nehmen|nahm]]
    \u2022	dachten \u2192 [[denken|dachten]]

## <examples>
### Example 1
#### <user_input>
Vincke: Oh sch\xF6n, sehr sch\xF6n. Da wird sich Leon freuen. Wann k\xF6nnen wir denn mal vorbeikommen?
#### <ideal_output>
Vincke: Oh [[sch\xF6n]], sehr [[sch\xF6n]]. Da wird sich Leon [[freuen|freuen]]. Wann [[k\xF6nnen|k\xF6nnen]] wir denn mal [[vorbeikommen]]?

### Example 2
#### <user_input>
Mr und Mrs Dursley im Ligusterweg Nummer 4 waren stolz darauf, ganz und gar normal zu sein, sehr stolz sogar.
#### <ideal_output>
Mr und Mrs Dursley im Ligusterweg [[Nummer]] 4 waren [[stolz]] darauf, [[ganz und gar]] normal zu sein, [[sehr]] [[stolz]] [[sogar]].

### Example 3
#### <user_input>
So hat jeder seine Sorgen... Ehe ich's vergesse: heute Abend l\xE4\xDFt du dir von Tante Martha einen Kleiderb\xFCgel geben und h\xE4ngst den Anzug ordentlich auf.
#### <ideal_output>
So hat jeder seine [[Sorgen]]... [[Ehe]] ich's [[vergessen|vergesse]]: [[heute]] [[Abend]] [[geben lassen|l\xE4\xDFt]] du dir von Tante Martha einen [[Kleiderb\xFCgel]] [[geben lassen|geben]] und [[aufh\xE4ngen|h\xE4ngst]] den [[Anzug]] [[ordentlich]] [[aufh\xE4ngen|auf]].

## **additional notes**
- *pronouns and function words** (e.g., *ich, du, wir, dass, weil, mein, dein, unser, mich, dich*) **are not tagged**.
- *negations** (*nicht, kein*) remain untagged.
- *modal verbs** (*k\xF6nnen, m\xFCssen, sollen*) should be tagged when conjugated:
    - kann gehen \u2192 [[k\xF6nnen|kann]] [[gehen]]
- *separable verbs must be tagged in both parts**, even when split:
    - weiterhelfen \u2192 [[weiterhelfen|weiter]] ... [[weiterhelfen|helfen]]
- *haben, sein, and werden** remain **untagged**, regardless of conjugation.
- *plural nouns must be tagged with their singular form**.

### Example 3
#### <user_input>
Wenn Schwesterlein zur Arbeit muss
Schlie\xDFt mich im Zimmer ein 
#### <ideal_output>
Wenn [[Schwesterlein]] zur [[Arbeit]] [[m\xFCssen|muss]]  
[[einschlie\xDFen|Schlie\xDFt]] mich im [[Zimmer]] [[einschlie\xDFen|ein]] 

## Example 5
#### <user_input>
Bei der Herstellung der Plastikalternative werden Chitinschichten aus Krabbenschalen und Zellulose von Baumfasern miteinander verbunden.   
#### <ideal_output>
Bei der [[Herstellung]] der [[Plastikalternative]] werden [[Chitinschale|Chitinschichten]] aus [[Krabbenschale|Krabbenschalen]] und [[Zellulose]] von [[Baumfaser|Baumfasern]] [[miteinander]] [[verbinden|verbunden]].

## Example 6
#### <user_input>
**Laupsien:** Das ist doch sch\xF6n. Tiere sind f\xFCr Kinder immer gut, f\xF6rdern Sozialkompetenz, Verantwortungsbewusstsein ...
#### <ideal_output>
[[Laupsien]]: Das ist doch [[sch\xF6n]]. [[Tier|Tiere]] sind f\xFCr [[Kind|Kinder]] [[gut]], [[f\xF6rdern]] [[Sozialkompetenz]], [[Verantwortungsbewusstsein]]...

## Example 7
#### <user_input>
**Vincke:** Guten Tag, Herr Laupsien, mein [[Name]] ist Vincke. Ich habe ein Problem, vielleicht k\xF6nnen Sie mir da weiterhelfen.
#### <ideal_output>
Vincke: [[Guten Tag]], Herr Laupsien, mein [[Name]] ist Vincke. Ich habe ein [[Problem]], [[vielleicht]] [[k\xF6nnen|k\xF6nnen]] Sie mir da [[weiterhelfen]].

## Example 8
#### <user_input>
Einen interessanten Ansatz haben z.B. Forscher des Georgia Institute of Technology. Sie verwendeten als Ausgangsmaterialien f\xFCr ihr neues Produkt Krabbenschalen und Baumfasern.
#### <ideal_output>
Einen [[interessant|interessanten]] [[Ansatz]] haben [[zum Beispiel|z.B.]] [[Forscher]] des Georgia Institute of Technology. Sie [[verwenden|verwendeten]] als [[Ausgangsmaterial|Ausgangsmaterialien]] f\xFCr ihr [[neu|neues]] [[Produkt]] [[Krabbenschale|Krabbenschalen]] und [[Baumfaser|Baumfasern]].

## Example 8
#### <user_input>
Steh auf!  
Steh wieder auf!  
#### <ideal_output>
[[aufstehen|Steh]] [[aufstehen|auf]]!  
[[aufstehen|Steh]] [[wieder]] [[aufstehen|auf]]!  

## Example 9
#### <user_input>
Und der Hut fliegt weit voran,  
st\xF6\xDFt zuletzt am Himmel an. 
#### <ideal_output>
Und der [[Hut]] [[fliegen|fliegt]] [[weit]] [[voran]],  
[[ansto\xDFen|st\xF6\xDFt]] [[zuletzt]] am [[Himmel]] [[ansto\xDFen|an]]. 

## Example 10
#### <user_input>
--Gr\xFC\xDFe sie alle sch\xF6n von mir. Und pa\xDF gut auf. In Berlin geht es anders zu als bei uns in Neustadt. Und am Sonntag gehst du mit Onkel Robert ins KaiserFriedrich-Museum. Und benimm dich anst\xE4ndig, damit es nicht hei\xDFt, wir hier w\xFC\xDFten nicht, was sich geh\xF6rt.
#### <ideal_output>
--[[Gr\xFC\xDFen|Gr\xFC\xDFe]] sie alle [[sch\xF6n]] von mir. Und [[aufpassen|pa\xDF]] [[gut]] [[aufpassen|auf]]. In Berlin [[gehen|geht]] es [[anders]] zu als bei uns in [[Neustadt]]. Und am [[Sonntag]] [[gehen|gehst]] du mit [[Onkel]] Robert ins KaiserFriedrich-Museum. Und  [[benehmen|benimm]] dich [[anst\xE4ndig]], damit es nicht [[hei\xDFen|hei\xDFt]], wir hier [[wissen|w\xFC\xDFten]] nicht, was sich [[geh\xF6ren|geh\xF6rt]].

## Example 11
#### <user_input>
In der Regel l\xF6se ich meine Punkte dann in Wertkupons ein und gehe dann damit einmal einkaufen.
#### <ideal_output>
In der [[Regel]] [[einl\xF6sen|l\xF6se]] ich meine [[Punkt|Punkte]] dann in [[Wertkupon|Wertkupons]] [[einl\xF6sen|ein]] und [[gehen|gehe]] dann damit einmal [[einkaufen]].

## Example 11
#### <user_input>
Wir schauen uns mal an, wie das funktioniert.
#### <ideal_output>
Wir [[anschauen|schauen]] uns mal [[anschauen|an]], wie das [[funktionieren|funktioniert]].
`;var Ce="Translate the given German text to English";var Se=`You are a German language expert. Translate the given Russian text to grammatically correct German, maintaining the original meaning and using natural German expressions.
<example>
input:
\u041E\u043D\u0430 \u0440\u0430\u0441\u0441\u043A\u0430\u0437\u0430\u043B\u0430, \u0447\u0442\u043E \u0435\u0451 \u043C\u0443\u0436 \u0443\u0435\u0445\u0430\u043B \u0432 \u0411\u0435\u0440\u043B\u0438\u043D \u043D\u0430 \u043C\u0430\u0448\u0438\u043D\u0435
output:
Sie erz\xE4hlte, dass ihr Mann mit dem Auto nach Berlin gefahren ist
</example>`;var C={generate_dictionary_entry:_e,determine_infinitive_and_pick_emoji:ye,make_brackets:ke,translate_de_to_eng:Ce,translate_ru_to_de:Se,check_ru_de_translation:Ee};var M=class{constructor(n,t){this.settings=n;this.vault=t;this.genAI=null;this.model="gemini-2.0-flash-lite-preview-02-05";this.logFile="api-logs.md";this.chatSessions={};try{this.settings.apiProvider==="deepseek"||this.settings.apiProvider==="google"&&(this.genAI=new I(this.settings.googleApiKey)),this.ensureLogFile()}catch(i){new T.Notice(`Error initializing API service: ${i.message}`)}}async ensureLogFile(){try{await this.vault.adapter.exists(this.logFile)||await this.vault.create(this.logFile,`# API Logs

`)}catch(n){console.error("Error creating log file:",n)}}async appendToLog(n,t,i){try{let s=`
                ## ${new Date().toISOString()}
                ### Prompt:
                \`\`\`
                ${n}
                \`\`\`

                ### Response:
                \`\`\`
                ${t}
                \`\`\`
                ${i?`
### Error:
\`\`\`
${JSON.stringify(i,null,2)}
\`\`\`
`:""}
                ---
                `,a=this.vault.getAbstractFileByPath(this.logFile);if(a instanceof T.TFile){let o=await this.vault.read(a);await this.vault.modify(a,o+s)}else{await this.ensureLogFile();let o=this.vault.getAbstractFileByPath(this.logFile);o instanceof T.TFile&&await this.vault.modify(o,s)}}catch(r){console.error("Error appending to log:",r)}}async generateContent(n,t){try{let i=null;if(n=n.replace(/^\t+/gm,""),this.settings.apiProvider==="deepseek"){if(!this.settings.deepseekApiKey)throw new Error("DeepSeek API key not configured.");let s="https://api.deepseek.com/v1/generation/inference",a={"Content-Type":"application/json",Authorization:`Bearer ${this.settings.deepseekApiKey}`},l=await fetch(s,{method:"POST",headers:a,body:JSON.stringify({model:"deepseek-chat",messages:[{role:"system",content:n},{role:"user",content:t}],stream:!1})});if(!l.ok)throw new Error(`HTTP error! status: ${l.status}`);i=(await l.json()).choices[0].message.content}else if(this.settings.apiProvider==="google"){if(!this.settings.googleApiKey)throw new Error("Google API key not configured.");this.genAI||(this.genAI=new I(this.settings.googleApiKey));let s={temperature:0,topP:.95,topK:64,maxOutputTokens:8192},a=n;if(!this.chatSessions[a]){let c=this.genAI.getGenerativeModel({model:this.model,systemInstruction:n});this.chatSessions[a]=c.startChat({generationConfig:s,history:[]})}i=(await this.chatSessions[a].sendMessage(t)).response.text()}else throw new Error("API provider not configured correctly.");return i===null?"":i}catch(i){throw await this.appendToLog(n,"",i),console.error("Error generating content:",i),new Error(i.message)}}async fetchTemplate(n){return this.generateContent(C.generate_dictionary_entry,n)}async determineInfinitiveAndEmoji(n){return this.generateContent(C.determine_infinitive_and_pick_emoji,n)}async makeBrackets(n){return this.generateContent(C.make_brackets,n)}async translateText(n){return this.generateContent(C.translate_de_to_eng,n)}async translateRuToDe(n){return this.generateContent(C.translate_ru_to_de,n)}async checkRuDeTranslation(n){return this.generateContent(C.check_ru_de_translation,n)}};var S=require("obsidian"),P=class{constructor(n){this.vault=n}async appendToFile(n,t){try{let i=(0,S.normalizePath)(n),r=await this.vault.getAbstractFileByPath(i);if((!r||!(r instanceof S.TFile))&&(await this.vault.create(i,""),r=await this.vault.getAbstractFileByPath(i),!r||!(r instanceof S.TFile))){console.error(`Failed to create file "${i}".`);return}(await this.vault.read(r)).endsWith(`
`)||(t=`
`+t),await this.vault.append(r,t)}catch(i){throw console.error(`Failed to append to file ${n}: ${i}`),i}}async doesFileContainContent(n,t){try{let i=(0,S.normalizePath)(n),r=this.vault.getAbstractFileByPath(i);return!r||!(r instanceof S.TFile)?null:(await this.vault.read(r)).includes(t)}catch(i){return console.error(`Failed to check file content ${n}: ${i}`),null}}};var Ae=require("obsidian");var G=require("obsidian");async function B(e){var t;let n=(t=e.file)==null?void 0:t.name;return n?n.slice(0,-3):(new G.Notice("Current file is missing a title"),null)}async function E(e){let n=e.getSelection();return n||(new G.Notice("No text selected"),null)}async function L(e){var t;let n=(t=e.file)==null?void 0:t.name;return n||(new G.Notice("Current file is missing a title"),null)}async function K(e,n,t){return e=e.replace(/[\s\n]+$/,""),`${`[[${n}#^${t}|(q)]]`} ${e} ^${t}
`}async function q(e,n,t){var r;let i=await B(t);if(i)try{let s=await e.apiService.fetchTemplate(i);s&&((r=t==null?void 0:t.file)!=null&&r.path)&&await e.fileService.appendToFile(t.file.path,s)}catch(s){new Ae.Notice(`Error: ${s.message}`)}}var ze=require("obsidian");async function J(e,n,t){var r;let i=await B(t);if(i)try{let s=await e.apiService.determineInfinitiveAndEmoji(i);s&&(s=s.replace(/^\n+/,""),s=s.trim(),(r=t.file)!=null&&r.path&&await e.fileService.appendToFile(t.file.path,s+`
`))}catch(s){new ze.Notice(`Error: ${s.message}`)}}var xe=require("obsidian");async function H(e,n,t,i){let r=await E(n);if(!r)return;let s=await L(t);if(s)try{if(t.file){let a=await e.app.vault.read(t.file),l=e.findHighestNumber(a)+1,c=await e.apiService.makeBrackets(r);if(c){let m=i?await K(c,s,l):c;n.replaceSelection(`${m}`)}}}catch(a){new xe.Notice(`Error: ${a.message}`)}}var Ie=require("obsidian");async function Z(e,n){let t=await E(n);if(t)try{let i=n.getCursor(),r=await e.apiService.translateText(t);r&&(n.replaceSelection(t+`

`+r+`
`),n.setCursor({line:i.line,ch:i.ch+t.length}))}catch(i){new Ie.Notice(`Error: ${i.message}`)}}var Re=require("obsidian");async function X(e,n,t){let i=await E(n);if(!i)return;let r=await L(t);if(r)try{if(t.file){let s=await e.app.vault.read(t.file),o=e.findHighestNumber(await s)+1,l=await K(i,r,o);await navigator.clipboard.writeText(`${l} 
`),n.replaceSelection(`${l}
`)}}catch(s){new Re.Notice(`Error: ${s.message}`)}}var Te=require("obsidian");async function Q(e,n){let t=await E(n);if(t)try{let i=await e.apiService.checkRuDeTranslation(t);i&&n.replaceSelection(t+`
`+i+`
`)}catch(i){new Te.Notice(`Error: ${i.message}`)}}var j=class extends f.Plugin{async onload(){try{await this.reloadPlugin(),this.addSettingTab(new N(this.app,this))}catch(t){console.error("Error during plugin initialization:",t),new f.Notice(`Plugin failed to load: ${t.message}`)}}async reloadPlugin(){await this.loadSettings(),this.apiService=new M(this.settings,this.app.vault),this.fileService=new P(this.app.vault),this.addCommand({id:"backlink-all-to-current-file",name:"Add backlinks to the current file in all referenced files",editorCallback:async(t,i)=>{var m,w;let r=(m=i.file)==null?void 0:m.name;if(!i.file||!r){new f.Notice("Current file is missing a title");return}let{metadataCache:s,vault:a}=this.app,o=s.getFileCache(i.file),l=(w=o==null?void 0:o.links)!=null?w:[],c=[];for(let d of l){let u=d.link,h=s.getFirstLinkpathDest(u,i.file.path);h instanceof f.TFile?c.push({name:u,path:h.path}):c.push({name:u,path:null})}for(let d of c)try{let u,h=`[[${r.split(".")[0]}]]`;if(d.path)u=d.path;else{let Ne=d.name[0].toUpperCase(),$=(0,f.normalizePath)(`Worter/${Ne}`);a.getAbstractFileByPath($)||await a.createFolder($),u=(0,f.normalizePath)(`${$}/${d.name}.md`)}await this.fileService.doesFileContainContent(u,h)||await this.fileService.appendToFile(u,`, ${h}`)}catch(u){new f.Notice(`Error processing link ${d.name}: ${u.message}`)}}}),this.addCommand({id:"fill-template",name:"Generate an dictionary entrie for the word in the title of the file",editorCallback:async(t,i)=>{await q(this,t,i)}}),this.addCommand({id:"get-infinitive-and-emoji",name:"Get infinitive form and emoji for current word",editorCallback:async(t,i)=>{await J(this,t,i)}}),this.addCommand({id:"duplicate-selection",name:"Add links to normal/inf froms to selected text",editorCallback:async(t,i)=>{await H(this,t,i,!0)}}),this.addCommand({id:"normalize-and-do-not-link",name:"z: Add liks to normal/inf forms [W/O a source link]",editorCallback:async(t,i)=>{await H(this,t,i,!1)}}),this.addCommand({id:"translate-selection",name:"Translate selected text and show below",editorCallback:async t=>{await Z(this,t)}}),this.addCommand({id:"format-selection-with-number",name:"Format selection with next number and source link",editorCallback:async(t,i)=>{await X(this,t,i)}}),this.addCommand({id:"translate-ru-to-de",name:"Translate Russian text to German",editorCallback:async t=>{let i=t.getSelection();if(!i){new f.Notice("No text selected");return}try{let r=await this.apiService.translateRuToDe(i);r&&t.replaceSelection(i+`
`+r+`
`)}catch(r){new f.Notice(`Error: ${r.message}`)}}}),this.addCommand({id:"check-ru-de-translation",name:"Check Russian-German translation",editorCallback:async t=>{await Q(this,t)}})}async loadSettings(){this.settings=Object.assign({},ee,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}findHighestNumber(t){let i=t.match(/#\^(\d+)/g);if(!i)return 0;let r=i.map(s=>{let a=s.replace("#^","");return parseInt(a,10)});return Math.max(0,...r)}};
/*! Bundled license information:

@google/generative-ai/dist/index.mjs:
  (**
   * @license
   * Copyright 2024 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)

@google/generative-ai/dist/index.mjs:
  (**
   * @license
   * Copyright 2024 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
*/
