/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var h=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var P=Object.prototype.hasOwnProperty;var A=(a,r)=>{for(var e in r)h(a,e,{get:r[e],enumerable:!0})},F=(a,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of I(r))!P.call(a,n)&&n!==e&&h(a,n,{get:()=>r[n],enumerable:!(t=w(r,n))||t.enumerable});return a};var v=a=>F(h({},"__esModule",{value:!0}),a);var O={};A(O,{default:()=>p});module.exports=v(O);var i=require("obsidian");var T=`
You are the expert-linguist in German language. You will be given a german word, your task is to write for it a dictionary entry in a specific format. The comments in <...> are for you and are not part of the template.

Depending on the form of a word, the templates differ.start every message with: "Prosesseed the word [insert prosessed word]. Identified it as []. Picked the emoji [insert emoji] because...".
PLEASE MAKE SHURE THAT IDENTIFIED 



For Trennbar verb use:

'''
<pick appropriate emoji for this word>üìû [[anrufen]] + Akk, [ÀàanruÀêfnÃ©]
[[rief an|rief an]]  
haben [[angerufen]]

---


---
Synonyme: [[telefonieren]], [[kontaktieren]], [[anklingeln]], [[durchklingeln]], [[w√§hlen]]
Antonyme: [[auflegen]], [[ignorieren]], [[schweigen]]

---
√úbersetzung: to call (on the phone)

---
Morpheme: [[an]][[ruf]][[en]]
 #Verb  #Trennbar
 
---


| Person | Pr√§sens | Pr√§teritum | Imperativ | Konjunktiv I | Konjunktiv II |
| --------- | ------------------- | --------------------- | --------------------------- | --------------------- | ----------------------- |
| Ich | [[rufe an]] | [[rief an]] | - | [[rufe an]] | [[riefe an]] |
| Du | [[rufst an]] | [[riefst an]] | [[ruf an]] | [[rufest an]] | [[riefest an]] |
| Er/sie/es | [[ruft an]] | [[rief an]] | - | [[rufe an]] | [[riefe an]] |
| Wir | [[rufen an]] | [[riefen an]] | - | [[rufen an]] | [[riefen an]] |
| Ihr | [[ruft an]] | [[rieft an]] | [[ruft an]] | [[rufet an]] | [[riefet an]] |
| Sie | [[rufen an]] | [[riefen an]] | [[rufen Sie an Sie]] | [[rufen an]] | [[riefen an]] |

Partizip I: [[anrufend]], Partizip II: [[angerufen]]

[[anrufen]] - [[an]] = [[rufen]]
'''




For Untrennbares verbs and verbs without prefixis, use: 
'''
<pick appropriate emoji for this word>üì¶ [[bekommen]] + Akk, [b…ôÀàk…îm…ôn]
[[bekam]]
haben [[bekommen]]

---



---
Synonyme: [[erhalten]], [[empfangen]], [[kriegen]], [[erlangen]], [[erreichen]]
Antonyme: [[geben]], [[verlieren]], [[abgeben]]


---
√úbersetzung: to get, to receive


---
Morpheme: [[be]][[komm]][[en]]
 #Verb  #Untrennbar
 

---

| Person    | Pr√§sens              | Pr√§teritum            | Imperativ         | Konjunktiv I           | Konjunktiv II           |
| --------- | -------------------- | --------------------- | ----------------- | ---------------------- | ----------------------- |
| Ich       | [[bekomme]]          | [[bekam]]             | -                 | [[bekomme]]            | [[bek√§me]]              |
| Du        | [[bekommst]]         | [[bekamst]]           | [[bekomm]]        | [[bekommest]]          | [[bek√§mest]]            |
| Er/sie/es | [[bekommt]]          | [[bekam]]             | -                 | [[bekomme]]            | [[bek√§me]]              |
| Wir       | [[bekommen]]         | [[bekamen]]           | -                 | [[bekommen]]           | [[bek√§men]]             |
| Ihr       | [[bekommt]]          | [[bekamt]]            | [[bekommt]]       | [[bekommet]]           | [[bek√§met]]             |
| Sie       | [[bekommen]]         | [[bekamen]]           | [[bekommen Sie]]  | [[bekommen]]           | [[bek√§men]]             |

Partizip I: [[bekommend]], Partizip II: [[bekommen]]
[[bekommen]] - [[be]] = [[kommen]]
'''


For adjectives use:

'''
klein, [Ààkla…™ÃØn]
nicht [[gro√ü]]

---


---
Synonyme: [[winzig]], [[gering]], [[niedrig]], [[schmal]], [[kurz]]
Antonyme: [[gro√ü]], [[riesig]], [[hoch]], [[weit]], [[lang]]

---
**√úbersetzung**:
small, little

---
#Adjective [[klein]]

---
Morpheme:
[[klein]]

---


Einzigartige m√∂gliche Formen: 
[[klein]], [[kleiner]], [[kleine]], [[kleines]], [[kleinen]], [[kleinem]], [[kleiner]], [[kleinen]]
[[kleiner]], [[kleinerer]], [[kleinere]], [[kleineres]], [[kleineren]], [[kleinerem]], [[kleinerer]], [[kleineren]]
[[kleinsten]], [[kleinster]], [[kleinste]], [[kleinstes]], [[kleinsten]], [[kleinstem]], [[kleinster]], [[kleinsten]]
'''

For nouns, use the template below. For feminin words, use üî¥, for neutral use üü¢, for Maskulin use üîµ
'''
üîµ der [[Busch]], [Ààb ä É]
die [[B√ºsche]]


---


---
Synonyme:
- [[Strauch]], [[Geb√ºsch]], [[Hecke]]

---
√úbersetzung: bush, shrub

---
Morpheme:
[[Busch]]

---
Einzigartige m√∂gliche Formen: [[Hauses]], [[Hause]], [[H√§user]], [[H√§usern]]

---
#Substantiv #Maskulin
'''


for other parts of speech, come up with a simmilar template and fill it in.

Start every message with: "Prosessed the word [insert prosessed word]. Identified it as [insert PART OF SPEACH]."

Make shure that you are filling the template for the identified part of speech. 
Make shure that you are filling the template for the prosessed word. 

PLEASE MAKE SHURE THAT IDENTIFIED PART OF SPEACH MATCHES THE TEMPLATE. IF UNSURE, WHICH PART OF SPEACH TO USE, PICK ONE THAT IS SPELLED EXACTLY LIKE GIVEN OR PLEASE FILL 2 SEPARATE TEMPLATES. YOU ARE GOOD AT THIS YOU CAN DO IT!

`;var C={anthropicKey:""},M=a=>{let r=a.split("[[").map(e=>e.replace(/\\/g,"").split("|")[0].split("]]")[0]);return r.shift(),r},p=class extends i.Plugin{async onload(){await this.loadSettings(),this.addCommand({id:"backlink-all-to-current-file",name:"Add backlinks to the current file in all referenced files",editorCallback:async(e,t)=>{var o;let n=(o=t.file)==null?void 0:o.name;if(!n){new i.Notice("Current file is missing a title");return}let s=t.data,l=M(s);for(let u of l){let c=`Worter/${u}.md`,m=`[[${n.split(".")[0]}]]`;await this.doesFileContainContent(c,m)||await this.appendToFile(c,`, ${m}`)}}}),this.addCommand({id:"log-to-file",name:"dumps log to the current file",editorCallback:async(e,t)=>{var u,c,m,f,d,g,b,y,E,S;let n=(u=t.file)==null?void 0:u.name;if(!n){new i.Notice("Current file is missing a title");return}let s=await this.fetchTemplate1(n),l=(d=(f=(m=(c=JSON.parse(s))==null?void 0:c.json)==null?void 0:m.content)==null?void 0:f[0])==null?void 0:d.text,o="";l?o=l:o=(E=(y=(b=(g=JSON.parse(s))==null?void 0:g.json)==null?void 0:b.content)==null?void 0:y[0])==null?void 0:E.text,(S=t==null?void 0:t.file)!=null&&S.path&&this.appendToFile(t.file.path,o)}}),this.addSettingTab(new k(this.app,this)),this.registerDomEvent(document,"click",e=>{console.log("click",e)}),this.registerInterval(window.setInterval(()=>console.log("setInterval"),5*60*1e3))}onunload(){}async loadSettings(){this.settings=Object.assign({},C,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async appendToFile(e,t){let n=this.app.vault.getAbstractFileByPath(e);if(n)if(n instanceof i.TFile)try{let l=await this.app.vault.read(n)+t;await this.app.vault.modify(n,l),new i.Notice(`Content appended to ${e} successfully!`)}catch(s){new i.Notice(`Error appending to file: ${s.message}`)}else new i.Notice(`File ${e} does not exist or is not a valid file!`);else try{await this.app.vault.create(e,t),new i.Notice(`File ${e} created successfully!`)}catch(s){new i.Notice(`Error creating file: ${s.message}`)}}async doesFileContainContent(e,t){let n=this.app.vault.getAbstractFileByPath(e);return n&&n instanceof i.TFile?(await this.app.vault.read(n)).includes(t):null}async fetchTemplate1(e){let t="https://api.anthropic.com/v1/messages",n={"Content-Type":"application/json","x-api-key":this.settings.anthropicKey,"anthropic-version":"2023-06-01","anthropic-beta":"prompt-caching-2024-07-31"},s={model:"claude-3-5-haiku-latest",max_tokens:1024,system:[{type:"text",text:T,cache_control:{type:"ephemeral"}}],messages:[{role:"user",content:e}]},l={method:"POST",headers:n,body:JSON.stringify(s)};try{let o=await(0,i.requestUrl)({url:t,method:"POST",contentType:"application/json",body:JSON.stringify(s),headers:n});return JSON.stringify(o)}catch(o){return o+`

`+JSON.stringify(l)}}};var k=class extends i.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new i.Setting(e).setName("Anthropic key").setDesc("Won`t leave your vault").addText(t=>t.setPlaceholder("Enter your key").setValue(this.plugin.settings.anthropicKey).onChange(async n=>{this.plugin.settings.anthropicKey=n,await this.plugin.saveSettings()}))}};
